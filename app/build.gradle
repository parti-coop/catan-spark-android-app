apply plugin: 'com.android.application'
check.dependsOn 'assembleDebugAndroidTest'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "xyz.parti.catan"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 23
        versionName "1.0.11"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    signingConfigs {
        release {
            def store_password = properties.getProperty('signing.config.store.password')
            def key_alias = properties.getProperty('signing.config.key.alias')
            def key_password = properties.getProperty('signing.config.key.password')

            storeFile file("parti.keystore")
            storePassword store_password
            keyAlias key_alias
            keyPassword key_password
        }
    }

    buildTypes {
        def var_api_base_url = "API_BASE_URL"
        def var_is_debug = "IS_DEBUG"
        def var_api_base_url_regx = "API_BASE_URL_REGX"
        def debug_api_base_url = properties.getProperty('debug.api.base.url')
        def debug_api_base_url_regx = properties.getProperty('debug.api.base.url.regx')

        def var_auth_google_webclient_id = "AUTH_GOOGLE_WEBCLIENT_ID"
        def debug_auth_google_webclient_id = properties.getProperty('debug.auth.google.webclient.id')
        def release_auth_google_webclient_id = properties.getProperty('release.auth.google.webclient.id')

        def var_auth_facebook_app_id = "auth_facebook_app_id"
        def debug_auth_facebook_app_id = properties.getProperty('debug.auth.facebook.app.id')
        def release_auth_facebook_app_id = properties.getProperty('release.auth.facebook.app.id')

        def var_auth_fb_login_protocol_scheme = "auth_fb_login_protocol_scheme"
        def debug_auth_fb_login_protocol_scheme = properties.getProperty('debug.auth.fb.login.protocol.scheme')
        def release_auth_fb_login_protocol_scheme = properties.getProperty('release.auth.fb.login.protocol.scheme')

        debug {
            buildConfigField "boolean", var_is_debug, "true"
            buildConfigField "String", var_api_base_url, ( '"' + debug_api_base_url + '"' ?: "\"http://parti.test/\"" )
            buildConfigField "String", var_api_base_url_regx, ( '"' + debug_api_base_url_regx + '"' ?: "\"^https:\\\\/\\\\/(.*\\\\.)?parti\\\\.test(\$|\\\\/)\"" )
            buildConfigField "String", var_auth_google_webclient_id, '"' + debug_auth_google_webclient_id + '"'
            resValue "string", var_auth_facebook_app_id, '"' + debug_auth_facebook_app_id + '"'
            resValue "string", var_auth_fb_login_protocol_scheme, '"' + debug_auth_fb_login_protocol_scheme + '"'
            manifestPlaceholders = [ crashlyticsApiKey: '767a814309d5e5b2803f20b7e992ad890513b53d' ]
        }
        release {
            buildConfigField "boolean", var_is_debug, "false"
            buildConfigField "String", var_api_base_url, "\"https://parti.xyz/\""
            buildConfigField "String", var_api_base_url_regx, "\"^https:\\\\/\\\\/(.*\\\\.)?parti\\\\.xyz(\$|\\\\/)\""
            buildConfigField "String", var_auth_google_webclient_id, '"' + release_auth_google_webclient_id + '"'
            resValue "string", var_auth_facebook_app_id, '"' + release_auth_facebook_app_id + '"'
            resValue "string", var_auth_fb_login_protocol_scheme, '"' + release_auth_fb_login_protocol_scheme + '"'
            manifestPlaceholders = [ crashlyticsApiKey: '61fec037830f072a57601a3e9f538a4a0f0d1ac3' ]
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def newName = output.outputFile.name.replace("app", "parti");
            newName = newName.replace(".apk", "-${variant.versionName}.apk")
            outputFileName = "./" + newName
        }
    }

    lintOptions {
        abortOnError false
    }
}

configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:27.1.0'
}

repositories {
    maven { url 'https://maven.google.com' }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:support-annotations:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:customtabs:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.karumi:dexter:4.2.0'

    implementation 'com.google.firebase:firebase-core:16.0.0'
    implementation 'com.google.firebase:firebase-messaging:17.0.0'
    implementation 'com.google.android.gms:play-services-auth:15.0.1'
    implementation 'com.facebook.android:facebook-android-sdk:5.+'
    implementation 'com.firebase:firebase-jobdispatcher:0.6.0'
    implementation 'com.wang.avi:library:2.1.3'

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true;
    }

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

apply plugin: 'com.google.gms.google-services'
